{
  "version": 3,
  "sources": ["../../react-top-loader/src/index.js"],
  "sourcesContent": ["import React from \"react\";\n\nclass DeterminateLoader extends React.Component {\n  render() {\n    const {\n      fixed,\n      backgroundColor,\n      thickness,\n      style,\n      duration,\n      progress,\n      progressDuration,\n      color,\n      zIndex,\n      ...rest\n    } = this.props;\n    return (\n      <div\n        style={{\n          position: fixed ? \"fixed\" : \"static\",\n          top: fixed ? 0 : undefined,\n          left: fixed ? 0 : undefined,\n          right: fixed ? 0 : undefined,\n          overflow: \"hidden\",\n          width: \"100%\",\n          height: thickness,\n          backgroundColor: backgroundColor,\n          zIndex: zIndex,\n          ...style\n        }}\n        {...rest}\n      >\n        <div\n          style={{\n            width: progress * 100 + \"%\",\n            position: \"relative\",\n            maxWidth: \"100%\",\n            height: \"100%\",\n            backgroundColor: color,\n            transition: `width ${progressDuration}ms linear`,\n            zIndex: zIndex + 1\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nclass IndeterminateLoader extends React.Component {\n  state = {\n    visible: false,\n    loading: false\n  };\n\n  isIndeterminate = () =>\n    this.props.progress === undefined || this.props.progerss === null;\n\n  loop = () => {\n    this.setState({ loading: true }, () =>\n      setTimeout(() => this.setState({ loading: false }), this.props.duration)\n    );\n  };\n\n  setupLoop = () =>\n    setTimeout(\n      () =>\n        this.setState({ visible: true }, () => {\n          this.loop();\n          this.interval = setInterval(this.loop, this.props.duration + 100);\n        }),\n      this.props.delay\n    );\n\n  componentDidMount() {\n    this.setupLoop();\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  }\n\n  render() {\n    const {\n      progress,\n      color,\n      backgroundColor,\n      thickness,\n      duration,\n      progressDuration,\n      fixed,\n      style,\n      zIndex,\n      ...rest\n    } = this.props;\n    const { loading, visible } = this.state;\n    return !visible ? null : (\n      <div\n        style={{\n          position: fixed ? \"fixed\" : \"static\",\n          top: fixed ? 0 : undefined,\n          left: fixed ? 0 : undefined,\n          right: fixed ? 0 : undefined,\n          overflow: \"hidden\",\n          width: \"100%\",\n          height: thickness,\n          backgroundColor: backgroundColor,\n          zIndex: zIndex,\n          ...style\n        }}\n        {...rest}\n      >\n        <div\n          style={{\n            position: \"relative\",\n            width: \"100%\",\n            height: \"100%\",\n            zIndex: zIndex + 1\n          }}\n        >\n          <div\n            style={{\n              content: \"\",\n              position: \"absolute\",\n              height: \"100%\",\n              backgroundColor: color,\n              transition: loading\n                ? `left ${duration}ms ease-out, width ${duration}ms ease-out`\n                : \"none\",\n              left: loading ? \"100%\" : \"-100%\",\n              width: loading ? \"10%\" : \"100%\",\n              zIndex: zIndex + 2\n            }}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nclass TopLoader extends React.Component {\n  render() {\n    const { show, ...rest } = this.props;\n    if (!show) {\n      return null;\n    }\n    if (rest.progress === undefined || rest.progress === null) {\n      return <IndeterminateLoader {...rest} />;\n    } else {\n      return <DeterminateLoader {...rest} />;\n    }\n  }\n}\n\nTopLoader.defaultProps = {\n  show: false,\n  duration: 1500,\n  progressDuration: 100,\n  thickness: 2,\n  color: \"#03a9f4\",\n  backgroundColor: \"transparent\",\n  fixed: true,\n  delay: 0,\n  zIndex: 10000\n};\n\nexport default TopLoader;\n"],
  "mappings": "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",
  "names": ["DeterminateLoader", "props", "fixed", "backgroundColor", "thickness", "style", "duration", "progress", "progressDuration", "color", "zIndex", "rest", "React", "undefined", "Component", "IndeterminateLoader", "state", "isIndeterminate", "progerss", "loop", "setState", "loading", "setTimeout", "setupLoop", "visible", "interval", "setInterval", "delay", "TopLoader", "show", "defaultProps"]
}
